import NextAuth from 'next-auth';
import CredentialProvider from "next-auth/providers/credentials";
import { db } from "@/lib/db";
import { NextResponse } from 'next/server';
export const authOptions = {
    providers: [ 
        CredentialProvider({
            name: "Credentials",
            credentials: {
                email: { label: "Email", type: "text" , placeholder: "jsmith"},
                password: { label: "Password", type: "password", placeholder: "******"},
                },
            async authorize(credentials,req){
            const userFound = await db.user.findUnique({
                    where: {
                        email: credentials.email,
                    },
                })
                console.log(userFound)
                if (!userFound) throw new Error("Usuario no encontrado")
                //if (!userFound) return NextResponse.json({error: "Usuario no encontrado"})
                const matchPassword = credentials.password === userFound.password //hacerlo con bcrypt para encriptadas
                console.log(matchPassword)
                if (!matchPassword) throw new Error("Contrase√±a incorrecta. Intente nuevamente.")

                return {
                    id: userFound.id,
                    firstname: userFound.firstname,
    
                }
            }
        }),
    ],
    pages: {
        signIn: "/auth/login",
    }
}

//export default NextAuth(authOptions)

const handler = NextAuth(authOptions);

export {handler as GET,handler as POST}