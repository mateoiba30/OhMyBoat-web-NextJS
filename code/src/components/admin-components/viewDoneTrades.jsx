"use client";
import React from 'react';
import { PieChart, Pie, Legend, Tooltip, ResponsiveContainer, Cell } from 'recharts';
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';
import { Download, MoveLeft } from 'lucide-react';
import { Button } from '@mui/material';
import { useRouter } from 'next/navigation';
export const ViewDoneTradesComponent = ({pieDataUno}) => {
  const getMaxValue = (data) => {
    const max = data.reduce((prev, current) => (prev.value > current.value) ? prev : current);
    return max;
  };

  const total = pieDataUno[0].value + pieDataUno[1].value;
  const obtenerPorcentaje = (data) => {
    if (total === 0){
      console.log(data)
      return 0;
    }
    console.log(data)
    console.log(data * 100 / total)
    return (data * 100 / total).toFixed(2);
  }


  const generatePDF = () => {
    const doc = new jsPDF();

    // Agregar imagen (asegúrate de tener la imagen en formato base64)
    const imgPath = '/Oh_My_Boat_logo_1.png'

    // Fecha actual
    const currentDate = new Date().toLocaleDateString();

    // Añadir imagen
    doc.addImage(imgPath, 'PNG', 10, 10, 20, 20); // Ajusta las coordenadas y el tamaño según sea necesario

    // Añadir texto "oh my boat"
     // Añadir texto "Oh my boat"
     doc.setFontSize(12);
     doc.setFont('bold')
     doc.text("Oh my boat!", 33, 18); // Ajusta las coor

    // Añadir fecha a la derecha
    doc.setFontSize(12);
    doc.text(`La Plata, Fecha: ${currentDate}`, doc.internal.pageSize.width - 60, 20);

    // Añadir título centrado
    doc.setFontSize(16);
    doc.text("Reporte de Intercambios realizados/no realizados", doc.internal.pageSize.width / 2, 40, { align: 'center' });

    // Añadir tabla
    autoTable(doc, {
      startY: 50, // Ajusta esta coordenada para que la tabla se dibuje después del encabezado
      head: [['Trueques', 'Cantidad', 'Porcentaje representativo']],
      body: pieDataUno.map(entry => [entry.name, entry.value, `${obtenerPorcentaje(entry.value)}%`]),
      foot: [[
        'Total de intercambios', 
        total, 
        (total === 0 ? '0%' : '100%'),
      ]]
    });
    //texto abajo de la tabla
    doc.setFontSize(10);
    doc.text('Recuerde que todos los valores son aproximaciones y pueden estar simplificados.', 10, doc.autoTable.previous.finalY + 10);
    // Añadir footer
    doc.setFontSize(10);
    doc.text('Generated by TinchoTech Technology.', doc.internal.pageSize.width / 2, doc.internal.pageSize.height - 10, { align: 'center' });

    doc.save('reporte_intercambios_revisados.pdf');
  };
  console.log(pieDataUno[0].value, pieDataUno[1].value);
  const router = useRouter();
  const handleBack = () => {
    router.back();
  }

  return (

    <div className="bg-white shadow-lg rounded-lg p-6 ">
    <button variant="ghost" className="hover:text-sky-500" onClick={handleBack}><MoveLeft height={20} width={20}/></button>
      <h1 className="text-2xl font-semibold mb-4 text-center">Trueques revisados</h1>
      {/* {(pieDataUno[0].value !== 0 && pieDataUno[1].value !== 0) && (
      <Button variant="contained" color="error" endIcon={<Download size={20}/>} onClick={generatePDF}>PDF </Button>
      )} */}
      <Button variant="contained" color="error" endIcon={<Download size={20}/>} onClick={generatePDF}>PDF </Button>
      
      <div className="flex">
        <div className="w-full">
          {(pieDataUno[0].value === 0 && pieDataUno[1].value === 0) ? (
            <h2 className="text-center">No hay trueques revisados aún</h2>
          ) : (
            <div>
            <ResponsiveContainer width="100%" height={400}>
              <PieChart>
                <Pie
                  dataKey="value"
                  data={pieDataUno}
                  cx="50%"
                  cy="50%"
                  outerRadius={80}
                  fill="#8884d8"
                  label={(entry) => `${entry.name}: ${entry.value}`}
                />
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
              <div className='flex flex-col '>
              <h1 className='text-center text-blue-600 font-semibold text-lg'>Trueques Revisados</h1>
                <span>
                De todos los trueques revisados ({total}), <span className='font-semibold text-green-500'>{pieDataUno[0].name} </span> <span className='font-semibold text-green-700'>({pieDataUno[0].value})</span> representa el <span className='font-semibold text-green-500'>{obtenerPorcentaje(pieDataUno[0].value)}%</span> y <span className='text-red-500 font-semibold'>{pieDataUno[1].name} </span> <span className='text-red-700 font-semibold'>({pieDataUno[1].value})</span>  representa el <span className='font-semibold text-red-500'>{obtenerPorcentaje(pieDataUno[1].value)}% </span>
                </span>
            </div>

            </div>
          )}

           {/* {pieDataUno.length > 0 && (
            <p className="text-center mt-2">
              Intercambio más popular: {getMaxValue(pieDataUno).name} ({getMaxValue(pieDataUno).value} intercambios totales)
            </p>
          )} */}
        </div>
      </div>
    </div>
  );
};