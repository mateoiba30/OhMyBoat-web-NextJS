"use client"
//exportar desde ahi sino no funciona
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { CardWrapper } from "@/components/auth/CardWrapper";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Input } from "@/components/ui/input";
import { Form,FormControl,FormField,FormItem,FormLabel,FormMessage } from "@/components/ui/form"
import { useTransition } from "react";
import { BoatSchema} from "@/schemas";
import { FormError } from "@/components/FormError";
import { FormSuccess } from "@/components/FormSuccess";


export const BoatForm = () => {
    const [file,setFile] = useState(null);
    const [url,setUrl] = useState("");
    const [error, setError] = useState("");
    const [success, setSuccess] = useState("");
    const [isPending, startTransition] = useTransition(); //usamos esto para la login transition

    const form = useForm({
        resolver: zodResolver(BoatSchema),
        defaultValues: {
            title: "",
            year: "",
            marine: "",
            image: {name: "" , size : 0}
        }
    });

    const onSubmit = (data) => { 
        setError("");
        setSuccess("");
        console.log(data)

    };

    return (
        <CardWrapper 
            headerLabel="Crear una publicaciÃ³n de un barco rellenando los datos." 
            backButtonLabel="Cancelar y volver al inicio" 
            backButtonHref="/"
            headerTitle="Publicar Barco"
        >
            <Form {...form}>
                <form 
                    onSubmit={form.handleSubmit(onSubmit)} 
                    className="space-y-6"
                    encType="multipart/form-data" 
                >
                    <div className="space-y-4">
                        {/* TITULO */}   
                        {/* ATENCION!! EN LOS FORMS EL NAME ES IGUAL AL Z SCHEMA, SI NO ES IGUAL NO FUNCA */}
                        <FormField
                            control={form.control}
                            name="title" 
                            
                            render={({ field }) => (
                                <FormItem>
                                    <FormLabel>Titulo:</FormLabel>
                                    <FormControl>
                                        <Input
                                            {...field}
                                            disabled={isPending}
                                            placeholder="Some title"
                                        />
                                    </FormControl>
                                    <FormMessage/>
                                </FormItem>
                            )}
                        />

                        {/* MODELO */}   
                        <FormField
                            control={form.control}
                            name="year"
                            render={({ field }) => (
                                <FormItem>
                                    <FormLabel>Modelo:</FormLabel>
                                    <FormControl>
                                        <Input
                                            {...field}
                                            disabled={isPending}
                                            placeholder="2024"
                                        />
                                    </FormControl>
                                    <FormMessage/>
                                </FormItem>
                            )}
                        />

                        {/* IMAGEN */}   
                        <FormField
                            control={form.control}
                            name="marine"
                            render={({ field }) => (
                                <FormItem>
                                    <FormLabel>Marina:</FormLabel>
                                    <FormControl>
                                        <Input
                                            {...field}
                                            disabled={isPending}
                                            placeholder="Puerto x"
                                        />
                                    </FormControl>
                                    <FormMessage/>
                                </FormItem>
                            )}
                        />

                    </div>
                    
                    {/* luego el error los mostrar */}
                    <FormError message={error}/>
                    <FormSuccess message={success}/>

                    <Button 
                        disabled={isPending}
                        type="submit" 
                        className="w-full bg-sky-500 hover:bg-sky-600 text-white"
                    >
                        Publicar
                    </Button>
                </form>
            </Form>
        </CardWrapper>     
    );
};